/*//Matthew Fernandes 
//400237897
#include <iostream>
#include <iomanip>
#include <cmath>
#include "Payroll.h"
#include "Efficiency.h"
//#include "Pay.h"
#include  "Employee.h"
using namespace std; 

int main()
{
	Payroll* FinalPay[3] = {
						  new Payroll(),
						  new Efficiency(),
						  new Employee(),
						 // new Pay()
	};

	for (int i = 0; i < 3; i++) {
		Payroll[i]->print();
		cout << endl;
	}

	//Payroll[0]->setTitle("");
	//Payroll[0]->setDescripition("");
	//Payroll[0]->setType("");
	Efficiency*csPoint = static_cast<Efficiency*>(Payroll[1]);

	//csPoint->setTitle("");
	//csPoint->setDescription(x);
	//Pay* cgPoint = static_cast<Pay*>(Payroll[2]);
	
	//cgPoint->setName("");
	//cgPoint->setDescription();
	
	for (int i = 0; i < 3; i++) {
		Payroll[i]->print();
		cout << endl;
	}
	return 0;
}

	 

	
	
	

}
/* string newemployee;

	 cout << " Payroll Management System " << endl;

	 cout << "Add a New Employee!" << endl;
	 cin >> newemployee;
	 cout << "Name:" << endl;

	 cout << "Date of Birth" << endl;

	 cout << "Position" << endl;

	 cout << "time with the company" << endl;*/
/* > Employee(payroll child class) --likely named with employee number(could be generated by personal info)
		 >> Personal Information(employee child class)
		 >> > Name
		 >> > D.O.B.
		 >> > Position
		 >> > Time with the company

		 >> Efficiency(employee child class)
		 >> > Sales numbers(array)
		 >> > Projects completed on time / late

		 >> Pay(employee child class)
		 >> > Hourly Wage(double) --could be constant or change with promotion
		 >> > Overtime Worked
		 >> > Bonus if efficiency is good
		 >> > Total to be paid(double) --can reset when the employee is paid
		 >> > Percentage of Total Annual Employment Cost -- just an idea
		 */
